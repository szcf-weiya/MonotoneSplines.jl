name: CI

on: [push]

jobs:
  test-and-docs:
    name: Julia ${{ matrix.julia-version }} - ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04, ubuntu-22.04]
        julia-version: ['1.8']
        python-version: ['3.8']
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - name: Install R
        run: |
          sudo apt-get install lsb-release
          sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E298A3A825C0D65DFD57CBB651716619E084DAB9
          sudo add-apt-repository "deb https://cloud.r-project.org/bin/linux/ubuntu $(lsb_release -c -s)-cran40/"
          sudo apt update
          sudo apt install r-base
          sudo apt install libcurl4-openssl-dev

      - name: Install Dependencies for R
        run: |
          r = getOption("repos")
          r["CRAN"] = "https://cloud.r-project.org/"
          options(repos=r)
          install.packages("fda")
          install.packages("lsei")
          install.packages("Iso")
          install.packages("cobs")
          install.packages("splines")
          install.packages("monmlp")
        shell: sudo Rscript {0}

      - uses: julia-actions/setup-julia@latest
        with:
          version: ${{ matrix.julia-version }}
      
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          architecture: 'x64'

      # see also: https://stackoverflow.com/questions/8795617/how-to-pip-install-a-package-with-min-and-max-version-range
      # https://pip.pypa.io/en/stable/cli/pip_install/#examples
      - name: Install Dependencies for Python
        run: |
          python -m pip install --upgrade pip
          pip3 install "torch>=1.9.0" --extra-index-url https://download.pytorch.org/whl/cpu
          pip3 install torchsort
          pip3 install "numpy>=1.20.2"
          pip3 install tqdm
      
      - uses: julia-actions/julia-runtest@v1
        env:
          LD_PRELOAD: /usr/lib/x86_64-linux-gnu/libcurl.so.4 
      - uses: julia-actions/julia-processcoverage@v1
      - uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: lcov.info
      - uses: julia-actions/julia-docdeploy@v1
        if: ${{ matrix.os == 'ubuntu-20.04' && matrix.julia-version == '1.8' && matrix.python-version == '3.8' }} # only run docs in one env
        env:
          LD_PRELOAD: /usr/lib/x86_64-linux-gnu/libcurl.so.4 
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # If authenticating with GitHub Actions token
          DOCUMENTER_KEY: ${{ secrets.DOCUMENTER_KEY }} # If authenticating with SSH deploy key
